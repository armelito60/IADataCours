source("C:/Users/Armel/Desktop/Cours ESIEA/Github/Prep des données et Analyse/td1.R", echo=TRUE)
#Centrage et réduction des données
list <- c("Calories", "Total.Fat", "Cholesterol")
menu.cr <- scale(menu[, list])
lims <- c(min(menu.cr),max(menu.cr))
plot3d(menu.cr, type = "p", xlim = lims, ylim = lims,zlim = lims)
install.packages("ade4")
library(ade4)
#Représentation en 3D des trois variables avec ellipse avec Calories, Total.Fat et Cholesterol
menu.cr_df <- as.data.frame(menu.cr)
plot3d(menu.cr, type = "s", xlim = lims, ylim = lims,zlim = lims)
plot3d(ellipse3d(cor(cbind(menu.cr_df$Calories,menu.cr_df$Total.Fat,menu.cr_df$Cholesterol))),col="grey",add=TRUE)
#ACP
list <- c("Calories","Total.Fat","Cholesterol")
acp <- dudi.pca(menu[, list], center=TRUE, scale=TRUE, scannf = FALSE, nf = 3)
var <- function(x) sum((x-mean(x))^2)/length(x)
scale <- function(x) (x - mean(x))/sqrt(var(x))
head(apply(menu.cr, 2, scale))
install.packages("ade4")
head(acp$tab)
summary(acp$tab)
summary(menu.cr)
head(acp$tab)
head(apply(menu.cr, 2, scale))
pve <- 100*acp$eig/sum(acp$eig)
cumsum(pve)
pve
cumsum(pve)
acp$nf
inertie <- inertie.dudi(acp, col.inertia=TRUE)
inertie <- inertia.dudi(acp, col.inertia=TRUE)
inertie
round(acp$co,2)
s.corcircle(acp$co, xax=1, yax=2)
s.label(acp$li, xax = 1, yax = 2)
#représentation labellisé des menus du mcdo avec l'acp
s.label(acp$li, xax = 1, yax=2, label=as.character(menu$Item), clabel=1.5)
gcol <- c("red1", "red4", "orange")
s.class(dfxy = acp$li, fac = menu$Category, col = gcol, xax = 1, yax = 2)
gcol <- c("red1", "red4", "orange")
s.class(dfxy = acp$li, fac = menu$Category, col = gcol, xax = 1, yax = 2)
summary(menu)
summary(data_macdo)
scatter(acp)
